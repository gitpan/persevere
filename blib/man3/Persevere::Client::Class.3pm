.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Persevere::Client::Class 3pm"
.TH Persevere::Client::Class 3pm "2010-01-19" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Persevere::Client::Class \- The Class interface to Persevere the JSON Database
.PP
.Vb 5
\&                        }
\&                }       
\&        }else{
\&                warn "Error getting user list from $path";
\&        }
\&        
\&        return $self;
\&}
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This module provides an interface to the classes in persevere
.PP
.Vb 10
\&  $persvr = Persevere::Client\->new(
\&    host => "localhost",
\&    port => "8080",
\&    auth_type => "basic",
\&    username => "test",
\&    password => "pass"
\&  );
\&  %hash1 = ("name1" => "test1", "type" => "odd");
\&  %hash2 = ("name2" => "test2", "type" => "even");
\&  push @post_data, \e%hash1;
\&  push @post_data, \e%hash2;
\&  # createObjects and updateObjects require and array of hashes
\&  $postreq = $initialclass\->createObjects(\e@post_data);
\&  $datareq = $initialclass\->query("[?type=\*(Aqeven\*(Aq]");
\&  # query returns an array of hashes
\&  if ($datareq\->{success}){
\&        # array of hashes
\&    @data = @{$datareq\->{data}};
\&  }
.Ve
.SH "METHODS"
.IX Header "METHODS"
.IP "new" 8
.IX Item "new"
.Vb 1
\&        This is called from Persevere::Client\->class.
.Ve
.IP "fullname" 8
.IX Item "fullname"
.Vb 1
\&        Returns a scalar of the name of the class the object refers to, removes trailing slash.
.Ve
.IP "exists" 8
.IX Item "exists"
.Vb 1
\&        Returns true if the class the object refers to exists.
.Ve
.IP "create" 8
.IX Item "create"
.Vb 1
\&        Creates the class the object refers to. calling $persvr\->class("classname"); does not create a class, it only creates an object that refers to the class, calling create on that object creates the actual class.
.Ve
.IP "delete" 8
.IX Item "delete"
.Vb 1
\&        Deletes the class the object refers to.
.Ve
.IP "createObjects" 8
.IX Item "createObjects"
.Vb 1
\&        Creates new objects, takes an array of hashes as input.
.Ve
.IP "updateObjects" 8
.IX Item "updateObjects"
.Vb 1
\&        Updates existing objects, takes an array of hashes as input. Hashes must have id\*(Aqs correcly set to update objects.
.Ve
.IP "queryRange" 8
.IX Item "queryRange"
.Vb 1
\&        Queries a range of results from the objects class.
.Ve
.IP "query" 8
.IX Item "query"
.Vb 1
\&        Queries all results from the objects class.
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Nathanael Anderson, \f(CW\*(C`<wirelessdreamer at gm]a[il d[0]t com>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-persevere\-client at rt.cpan.org\*(C'\fR, or through
the web interface at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Persevere\-Client>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2009 Nathanael Anderson.
.PP
s program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 72:" 4
.IX Item "Around line 72:"
=pod directives shouldn't be over one line long!  Ignoring all 10 lines of content
